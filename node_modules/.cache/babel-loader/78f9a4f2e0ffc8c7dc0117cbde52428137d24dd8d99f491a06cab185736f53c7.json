{"ast":null,"code":"var _jsxFileName = \"/Users/ahmad/clock-in-out-client/clock-in-out-client/src/AdminDashboard.js\",\n  _s = $RefreshSig$();\n// src/AdminDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport api from './api';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport './AdminDashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [selectedMonth, setSelectedMonth] = useState(''); // Format \"YYYY-MM\"\n  const [error, setError] = useState('');\n\n  // State for \"Add User\" modal\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const [newUsername, setNewUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [newRole, setNewRole] = useState('user'); // default role\n  const [newPhone, setNewPhone] = useState('');\n  const [addUserError, setAddUserError] = useState('');\n\n  // Fetch all users from the server\n  const fetchAllUsers = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await api.get('/api/users', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUsers(response.data);\n      setError('');\n    } catch (err) {\n      console.error(err);\n      setError('Failed to fetch users.');\n    }\n  };\n  useEffect(() => {\n    fetchAllUsers();\n  }, []);\n\n  // Find the selected user (if any)\n  const selectedUser = users.find(u => u._id === selectedUserId);\n\n  // For the selected user, filter clock entries by the selected month.\n  const filteredEntries = selectedUser && selectedUser.clockEntries ? selectedUser.clockEntries.filter(entry => {\n    if (!selectedMonth) return true;\n    const entryYearMonth = new Date(entry.timestamp).toISOString().slice(0, 7);\n    return entryYearMonth === selectedMonth;\n  }) : [];\n\n  // Group entries by day using the timestamp field.\n  const groupEntriesByDay = entries => {\n    const grouped = {};\n    entries.forEach(entry => {\n      const dateKey = new Date(entry.timestamp).toLocaleDateString();\n      if (!grouped[dateKey]) {\n        grouped[dateKey] = [];\n      }\n      grouped[dateKey].push(entry);\n    });\n    return grouped;\n  };\n  const groupedEntries = groupEntriesByDay(filteredEntries);\n\n  // Compute daily hours by pairing the earliest clockIn with the latest clockOut.\n  const computeDailyHours = dayEntries => {\n    if (!dayEntries || dayEntries.length === 0) return 0;\n    const clockIns = dayEntries.filter(e => e.type === 'clockIn');\n    const clockOuts = dayEntries.filter(e => e.type === 'clockOut');\n    if (clockIns.length === 0 || clockOuts.length === 0) return 0;\n    const earliestClockIn = new Date(Math.min(...clockIns.map(e => new Date(e.timestamp).getTime())));\n    const latestClockOut = new Date(Math.max(...clockOuts.map(e => new Date(e.timestamp).getTime())));\n    return (latestClockOut - earliestClockIn) / (1000 * 60 * 60);\n  };\n\n  // Compute weekly total hours for a user.\n  const computeUserWeeklyHours = user => {\n    if (!user.clockEntries) return 0;\n    const grouped = groupEntriesByDay(user.clockEntries);\n    let total = 0;\n    Object.keys(grouped).forEach(day => {\n      total += computeDailyHours(grouped[day]);\n    });\n    return total;\n  };\n\n  // Prepare data for overall chart: each user's weekly total hours.\n  const overallData = users.map(user => ({\n    username: user.username,\n    weeklyHours: computeUserWeeklyHours(user)\n  }));\n\n  // Prepare data for detailed chart: selected user's daily hours for the selected month.\n  const detailedData = Object.keys(groupedEntries).map(date => ({\n    date,\n    hours: computeDailyHours(groupedEntries[date])\n  })).sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // For the month dropdown, determine the available months for the selected user.\n  const availableMonths = selectedUser && selectedUser.clockEntries ? Array.from(new Set(selectedUser.clockEntries.map(entry => new Date(entry.timestamp).toISOString().slice(0, 7)))).sort() : [];\n\n  // --- Add User functionality ---\n  const handleAddUser = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      // Call the registration endpoint. Adjust the endpoint if needed.\n      const response = await api.post('/api/auth/register', {\n        username: newUsername,\n        password: newPassword,\n        role: newRole,\n        phone: newPhone\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      // After successful registration, refresh the user list.\n      await fetchAllUsers();\n      setShowAddUserModal(false);\n      setNewUsername('');\n      setNewPassword('');\n      setNewRole('user');\n      setNewPhone('');\n      setAddUserError('');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error adding user:', err);\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to add user.';\n      setAddUserError(errorMsg);\n    }\n  };\n  const handleCloseAddUserModal = () => {\n    setShowAddUserModal(false);\n    setAddUserError('');\n  };\n\n  // Render the detailed charts and table as before.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-user-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAddUserModal(true),\n        className: \"add-user-button\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), showAddUserModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), addUserError && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: addUserError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddUser,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newUsername,\n              onChange: e => setNewUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Role:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newRole,\n              onChange: e => setNewRole(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newPhone,\n              onChange: e => setNewPhone(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleCloseAddUserModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"userSelect\",\n        children: \"Select User: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"userSelect\",\n        value: selectedUserId,\n        onChange: e => {\n          setSelectedUserId(e.target.value);\n          setSelectedMonth('');\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select User--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user._id,\n          children: user.username\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"monthSelect\",\n          children: \"Select Month: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"monthSelect\",\n          value: selectedMonth,\n          onChange: e => setSelectedMonth(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--All Months--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), availableMonths.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: month,\n            children: month\n          }, month, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedUser.username, \"'s Detailed Time Entries\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this), detailedData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: detailedData,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => Number(value).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"hours\",\n            fill: \"#82ca9d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No detailed time entries available for the selected month.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }, this), Object.keys(groupedEntries).length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"admin-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Clock In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Clock Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(groupedEntries).sort((a, b) => new Date(a) - new Date(b)).map(date => {\n            const dayEntries = groupedEntries[date];\n            const dailyHours = computeDailyHours(dayEntries);\n            const clockInTime = dayEntries.find(e => e.type === 'clockIn') ? new Date(dayEntries.find(e => e.type === 'clockIn').timestamp).toLocaleTimeString() : 'N/A';\n            const clockOutTime = dayEntries.find(e => e.type === 'clockOut') ? new Date(dayEntries.find(e => e.type === 'clockOut').timestamp).toLocaleTimeString() : 'N/A';\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: clockInTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: clockOutTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: dailyHours.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 25\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No time entries available for the selected month.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a user from the dropdown.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weekly Total Hours for All Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), overallData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: overallData,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => Number(value).toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"weeklyHours\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No user data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"HVrAIKOUf6veh4JZSoKRNdL6rF0=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","api","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","users","setUsers","selectedUserId","setSelectedUserId","selectedMonth","setSelectedMonth","error","setError","showAddUserModal","setShowAddUserModal","newUsername","setNewUsername","newPassword","setNewPassword","newRole","setNewRole","newPhone","setNewPhone","addUserError","setAddUserError","fetchAllUsers","token","localStorage","getItem","response","get","headers","Authorization","data","err","console","selectedUser","find","u","_id","filteredEntries","clockEntries","filter","entry","entryYearMonth","Date","timestamp","toISOString","slice","groupEntriesByDay","entries","grouped","forEach","dateKey","toLocaleDateString","push","groupedEntries","computeDailyHours","dayEntries","length","clockIns","e","type","clockOuts","earliestClockIn","Math","min","map","getTime","latestClockOut","max","computeUserWeeklyHours","user","total","Object","keys","day","overallData","username","weeklyHours","detailedData","date","hours","sort","a","b","availableMonths","Array","from","Set","handleAddUser","preventDefault","post","password","role","phone","_err$response","_err$response$data","errorMsg","handleCloseAddUserModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","onSubmit","value","onChange","target","required","htmlFor","id","month","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","formatter","Number","toFixed","fill","dailyHours","clockInTime","toLocaleTimeString","clockOutTime","_c","$RefreshReg$"],"sources":["/Users/ahmad/clock-in-out-client/clock-in-out-client/src/AdminDashboard.js"],"sourcesContent":["// src/AdminDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport api from './api';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport './AdminDashboard.css';\n\nconst AdminDashboard = () => {\n  const [users, setUsers] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [selectedMonth, setSelectedMonth] = useState(''); // Format \"YYYY-MM\"\n  const [error, setError] = useState('');\n\n  // State for \"Add User\" modal\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const [newUsername, setNewUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [newRole, setNewRole] = useState('user'); // default role\n  const [newPhone, setNewPhone] = useState('');\n  const [addUserError, setAddUserError] = useState('');\n\n  // Fetch all users from the server\n  const fetchAllUsers = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await api.get('/api/users', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setUsers(response.data);\n      setError('');\n    } catch (err) {\n      console.error(err);\n      setError('Failed to fetch users.');\n    }\n  };\n\n  useEffect(() => {\n    fetchAllUsers();\n  }, []);\n\n  // Find the selected user (if any)\n  const selectedUser = users.find(u => u._id === selectedUserId);\n\n  // For the selected user, filter clock entries by the selected month.\n  const filteredEntries = selectedUser && selectedUser.clockEntries\n    ? selectedUser.clockEntries.filter(entry => {\n        if (!selectedMonth) return true;\n        const entryYearMonth = new Date(entry.timestamp).toISOString().slice(0, 7);\n        return entryYearMonth === selectedMonth;\n      })\n    : [];\n\n  // Group entries by day using the timestamp field.\n  const groupEntriesByDay = (entries) => {\n    const grouped = {};\n    entries.forEach(entry => {\n      const dateKey = new Date(entry.timestamp).toLocaleDateString();\n      if (!grouped[dateKey]) {\n        grouped[dateKey] = [];\n      }\n      grouped[dateKey].push(entry);\n    });\n    return grouped;\n  };\n\n  const groupedEntries = groupEntriesByDay(filteredEntries);\n\n  // Compute daily hours by pairing the earliest clockIn with the latest clockOut.\n  const computeDailyHours = (dayEntries) => {\n    if (!dayEntries || dayEntries.length === 0) return 0;\n    const clockIns = dayEntries.filter(e => e.type === 'clockIn');\n    const clockOuts = dayEntries.filter(e => e.type === 'clockOut');\n    if (clockIns.length === 0 || clockOuts.length === 0) return 0;\n    const earliestClockIn = new Date(Math.min(...clockIns.map(e => new Date(e.timestamp).getTime())));\n    const latestClockOut = new Date(Math.max(...clockOuts.map(e => new Date(e.timestamp).getTime())));\n    return (latestClockOut - earliestClockIn) / (1000 * 60 * 60);\n  };\n\n  // Compute weekly total hours for a user.\n  const computeUserWeeklyHours = (user) => {\n    if (!user.clockEntries) return 0;\n    const grouped = groupEntriesByDay(user.clockEntries);\n    let total = 0;\n    Object.keys(grouped).forEach(day => {\n      total += computeDailyHours(grouped[day]);\n    });\n    return total;\n  };\n\n  // Prepare data for overall chart: each user's weekly total hours.\n  const overallData = users.map(user => ({\n    username: user.username,\n    weeklyHours: computeUserWeeklyHours(user),\n  }));\n\n  // Prepare data for detailed chart: selected user's daily hours for the selected month.\n  const detailedData = Object.keys(groupedEntries)\n    .map(date => ({\n      date,\n      hours: computeDailyHours(groupedEntries[date]),\n    }))\n    .sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // For the month dropdown, determine the available months for the selected user.\n  const availableMonths = selectedUser && selectedUser.clockEntries\n    ? Array.from(\n        new Set(\n          selectedUser.clockEntries.map(entry =>\n            new Date(entry.timestamp).toISOString().slice(0, 7)\n          )\n        )\n      ).sort()\n    : [];\n\n  // --- Add User functionality ---\n  const handleAddUser = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      // Call the registration endpoint. Adjust the endpoint if needed.\n      const response = await api.post('/api/auth/register', {\n        username: newUsername,\n        password: newPassword,\n        role: newRole,\n        phone: newPhone,\n      }, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      // After successful registration, refresh the user list.\n      await fetchAllUsers();\n      setShowAddUserModal(false);\n      setNewUsername('');\n      setNewPassword('');\n      setNewRole('user');\n      setNewPhone('');\n      setAddUserError('');\n    } catch (err) {\n      console.error('Error adding user:', err);\n      const errorMsg = err.response?.data?.error || 'Failed to add user.';\n      setAddUserError(errorMsg);\n    }\n  };\n\n  const handleCloseAddUserModal = () => {\n    setShowAddUserModal(false);\n    setAddUserError('');\n  };\n\n  // Render the detailed charts and table as before.\n  return (\n    <div className=\"admin-dashboard\">\n      <h1>Admin Dashboard</h1>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n\n      {/* Add User Section */}\n      <div className=\"add-user-section\">\n        <button onClick={() => setShowAddUserModal(true)} className=\"add-user-button\">\n          Add User\n        </button>\n      </div>\n\n      {showAddUserModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h2>Add New User</h2>\n            {addUserError && <p style={{ color: 'red' }}>{addUserError}</p>}\n            <form onSubmit={handleAddUser}>\n              <div>\n                <label>Username:</label>\n                <input\n                  type=\"text\"\n                  value={newUsername}\n                  onChange={(e) => setNewUsername(e.target.value)}\n                  required\n                />\n              </div>\n              <div>\n                <label>Password:</label>\n                <input\n                  type=\"password\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  required\n                />\n              </div>\n              <div>\n                <label>Role:</label>\n                <select value={newRole} onChange={(e) => setNewRole(e.target.value)} required>\n                  <option value=\"user\">User</option>\n                  <option value=\"admin\">Admin</option>\n                </select>\n              </div>\n              <div>\n                <label>Phone:</label>\n                <input\n                  type=\"text\"\n                  value={newPhone}\n                  onChange={(e) => setNewPhone(e.target.value)}\n                  required\n                />\n              </div>\n              <div className=\"modal-buttons\">\n                <button type=\"submit\">Add User</button>\n                <button type=\"button\" onClick={handleCloseAddUserModal}>\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Filters for detailed charts */}\n      <div className=\"filters\">\n        <label htmlFor=\"userSelect\">Select User: </label>\n        <select\n          id=\"userSelect\"\n          value={selectedUserId}\n          onChange={(e) => {\n            setSelectedUserId(e.target.value);\n            setSelectedMonth('');\n          }}\n        >\n          <option value=\"\">--Select User--</option>\n          {users.map(user => (\n            <option key={user._id} value={user._id}>\n              {user.username}\n            </option>\n          ))}\n        </select>\n\n        {selectedUser && (\n          <>\n            <label htmlFor=\"monthSelect\">Select Month: </label>\n            <select\n              id=\"monthSelect\"\n              value={selectedMonth}\n              onChange={(e) => setSelectedMonth(e.target.value)}\n            >\n              <option value=\"\">--All Months--</option>\n              {availableMonths.map(month => (\n                <option key={month} value={month}>\n                  {month}\n                </option>\n              ))}\n            </select>\n          </>\n        )}\n      </div>\n\n      {selectedUser ? (\n        <>\n          <h2>{selectedUser.username}'s Detailed Time Entries</h2>\n          {detailedData.length > 0 ? (\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart data={detailedData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip formatter={(value) => Number(value).toFixed(2)} />\n                <Legend />\n                <Bar dataKey=\"hours\" fill=\"#82ca9d\" />\n              </BarChart>\n            </ResponsiveContainer>\n          ) : (\n            <p>No detailed time entries available for the selected month.</p>\n          )}\n\n          {Object.keys(groupedEntries).length > 0 ? (\n            <table className=\"admin-table\">\n              <thead>\n                <tr>\n                  <th>Date</th>\n                  <th>Clock In</th>\n                  <th>Clock Out</th>\n                  <th>Hours</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.keys(groupedEntries)\n                  .sort((a, b) => new Date(a) - new Date(b))\n                  .map(date => {\n                    const dayEntries = groupedEntries[date];\n                    const dailyHours = computeDailyHours(dayEntries);\n                    const clockInTime = dayEntries.find(e => e.type === 'clockIn')\n                      ? new Date(dayEntries.find(e => e.type === 'clockIn').timestamp).toLocaleTimeString()\n                      : 'N/A';\n                    const clockOutTime = dayEntries.find(e => e.type === 'clockOut')\n                      ? new Date(dayEntries.find(e => e.type === 'clockOut').timestamp).toLocaleTimeString()\n                      : 'N/A';\n                    return (\n                      <tr key={date}>\n                        <td>{date}</td>\n                        <td>{clockInTime}</td>\n                        <td>{clockOutTime}</td>\n                        <td>{dailyHours.toFixed(2)}</td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          ) : (\n            <p>No time entries available for the selected month.</p>\n          )}\n        </>\n      ) : (\n        <p>Please select a user from the dropdown.</p>\n      )}\n\n      <h2>Weekly Total Hours for All Users</h2>\n      {overallData.length > 0 ? (\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart data={overallData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"username\" />\n            <YAxis />\n            <Tooltip formatter={(value) => Number(value).toFixed(2)} />\n            <Legend />\n            <Bar dataKey=\"weeklyHours\" fill=\"#8884d8\" />\n          </BarChart>\n        </ResponsiveContainer>\n      ) : (\n        <p>No user data available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}