{"ast":null,"code":"// src/redux/authActions.js\nimport axios from 'axios';\nimport api from './api';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\nexport const loginRequest = () => ({\n  type: LOGIN_REQUEST\n});\nexport const login = user => {\n  if (user.token) {\n    localStorage.setItem('token', user.token);\n  }\n  localStorage.setItem('user', JSON.stringify(user));\n  return {\n    type: LOGIN,\n    payload: user\n  };\n};\nexport const loginFailure = error => ({\n  type: LOGIN_FAILURE,\n  payload: error\n});\nexport const logoutRequest = () => ({\n  type: LOGOUT_REQUEST\n});\nexport const logoutSuccess = () => ({\n  type: LOGOUT_SUCCESS\n});\nexport const logoutFailure = error => ({\n  type: LOGOUT_FAILURE,\n  payload: error\n});\n\n// Async action to perform login\nexport const performLogin = credentials => async dispatch => {\n  dispatch(loginRequest());\n  try {\n    // The proxy setting in package.json forwards this request to your server (http://localhost:3001)\n    const response = await axios.post('/api/auth/login', credentials);\n    dispatch(login(response.data));\n  } catch (error) {\n    var _error$response, _error$response$data;\n    const errorMsg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message;\n    dispatch(loginFailure(errorMsg));\n  }\n};\n\n// Async action to perform logout\nexport const performLogout = () => async dispatch => {\n  dispatch(logoutRequest());\n  try {\n    await api.post('/api/auth/logout');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch(logoutSuccess());\n    window.location.href = '/';\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    const errorMsg = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || error.message;\n    dispatch(logoutFailure(errorMsg));\n  }\n};\n\n// Export an alias \"logout\" that points to performLogout so that App.js can import { logout }\nexport const logout = performLogout;","map":{"version":3,"names":["axios","api","LOGIN","LOGOUT","LOGIN_REQUEST","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","loginRequest","type","login","user","token","localStorage","setItem","JSON","stringify","payload","loginFailure","error","logoutRequest","logoutSuccess","logoutFailure","performLogin","credentials","dispatch","response","post","data","_error$response","_error$response$data","errorMsg","message","performLogout","removeItem","window","location","href","_error$response2","_error$response2$data","logout"],"sources":["/Users/ahmad/clock-in-out-client/clock-in-out-client/src/redux/authActions.js"],"sourcesContent":["// src/redux/authActions.js\nimport axios from 'axios';\nimport api from './api';\n\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE';\n\nexport const loginRequest = () => ({\n  type: LOGIN_REQUEST,\n});\n\nexport const login = (user) => {\n  if (user.token) {\n    localStorage.setItem('token', user.token);\n  }\n  localStorage.setItem('user', JSON.stringify(user));\n  return { type: LOGIN, payload: user };\n};\n\nexport const loginFailure = (error) => ({\n  type: LOGIN_FAILURE,\n  payload: error,\n});\n\nexport const logoutRequest = () => ({\n  type: LOGOUT_REQUEST,\n});\n\nexport const logoutSuccess = () => ({\n  type: LOGOUT_SUCCESS,\n});\n\nexport const logoutFailure = (error) => ({\n  type: LOGOUT_FAILURE,\n  payload: error,\n});\n\n// Async action to perform login\nexport const performLogin = (credentials) => async (dispatch) => {\n  dispatch(loginRequest());\n  try {\n    // The proxy setting in package.json forwards this request to your server (http://localhost:3001)\n    const response = await axios.post('/api/auth/login', credentials);\n    dispatch(login(response.data));\n  } catch (error) {\n    const errorMsg = error.response?.data?.message || error.message;\n    dispatch(loginFailure(errorMsg));\n  }\n};\n\n// Async action to perform logout\nexport const performLogout = () => async (dispatch) => {\n  dispatch(logoutRequest());\n  try {\n    await api.post('/api/auth/logout');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    dispatch(logoutSuccess());\n    window.location.href = '/';\n  } catch (error) {\n    const errorMsg = error.response?.data?.message || error.message;\n    dispatch(logoutFailure(errorMsg));\n  }\n};\n\n// Export an alias \"logout\" that points to performLogout so that App.js can import { logout }\nexport const logout = performLogout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}