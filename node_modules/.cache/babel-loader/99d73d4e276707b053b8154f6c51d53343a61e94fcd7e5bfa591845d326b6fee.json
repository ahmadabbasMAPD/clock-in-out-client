{"ast":null,"code":"var _jsxFileName = \"/Users/ahmad/clock-in-out 2/client/src/ClockInOut.js\",\n  _s = $RefreshSig$();\n// src/ClockInOut.js\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n//import './ClockInOut.css'; // Optional: your custom CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClockInOut = () => {\n  _s();\n  // Local state for clock-in status and time entries\n  const [isClockedIn, setIsClockedIn] = useState(false);\n  const [timeEntries, setTimeEntries] = useState([]);\n\n  // Modal state for editing entries\n  const [showModal, setShowModal] = useState(false);\n  // The day being edited (used only to group entries, not the times themselves)\n  const [editDate, setEditDate] = useState(null);\n  // Separate states for the editable clock in and clock out times\n  const [editClockIn, setEditClockIn] = useState(new Date());\n  const [editClockOut, setEditClockOut] = useState(new Date());\n\n  // Handler to clock in: record the current time as a clock in event.\n  const handleClockIn = () => {\n    if (!isClockedIn) {\n      const currentTime = new Date();\n      setTimeEntries([...timeEntries, {\n        type: 'Clock In',\n        time: currentTime,\n        editable: false\n      }]);\n      setIsClockedIn(true);\n    }\n  };\n\n  // Handler to clock out: record the current time as a clock out event.\n  const handleClockOut = () => {\n    if (isClockedIn) {\n      const currentTime = new Date();\n      setTimeEntries([...timeEntries, {\n        type: 'Clock Out',\n        time: currentTime,\n        editable: false\n      }]);\n      setIsClockedIn(false);\n    }\n  };\n\n  // Handler to open the edit modal for a given day.\n  const handleEdit = day => {\n    setEditDate(day);\n    // Extract existing entries for the selected day.\n    const dayEntries = timeEntries.filter(entry => new Date(entry.time).toLocaleDateString() === day.toLocaleDateString());\n    const clockInEntry = dayEntries.find(entry => entry.type === 'Clock In');\n    const clockOutEntry = dayEntries.find(entry => entry.type === 'Clock Out');\n\n    // If no entry exists, default to the selected day.\n    setEditClockIn(clockInEntry ? new Date(clockInEntry.time) : day);\n    setEditClockOut(clockOutEntry ? new Date(clockOutEntry.time) : day);\n    setShowModal(true);\n  };\n\n  // Handler to save edited clock in/out times for the selected day.\n  const handleSave = e => {\n    e.preventDefault();\n    const updatedEntries = timeEntries.map(entry => {\n      if (new Date(entry.time).toLocaleDateString() === editDate.toLocaleDateString()) {\n        if (entry.type === 'Clock In') {\n          return {\n            ...entry,\n            time: editClockIn\n          };\n        }\n        if (entry.type === 'Clock Out') {\n          return {\n            ...entry,\n            time: editClockOut\n          };\n        }\n      }\n      return entry;\n    });\n    setTimeEntries(updatedEntries);\n    setShowModal(false);\n  };\n\n  // Close the modal without saving\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  // Format a Date into a readable string.\n  const formatDate = date => {\n    if (!(date instanceof Date) || isNaN(date.getTime())) {\n      return 'Invalid date';\n    }\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      timeZoneName: 'short'\n    }).format(date);\n  };\n\n  // Group entries by day\n  const groupEntriesByDay = () => {\n    const grouped = {};\n    timeEntries.forEach(entry => {\n      const dateKey = new Date(entry.time).toLocaleDateString();\n      if (!grouped[dateKey]) {\n        grouped[dateKey] = [];\n      }\n      grouped[dateKey].push(entry);\n    });\n    return grouped;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clock-in-out-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"status\",\n      children: isClockedIn ? 'Clocked In' : 'Clocked Out'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clock-button\",\n        onClick: handleClockIn,\n        disabled: isClockedIn,\n        children: \"Clock In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clock-button\",\n        onClick: handleClockOut,\n        disabled: !isClockedIn,\n        children: \"Clock Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entries-grid\",\n      children: Object.entries(groupEntriesByDay()).map(([date, entries]) => {\n        var _entries$find, _entries$find2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-entries\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"entry-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"entry-type\",\n              children: \"Clock In:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"entry-time\",\n              children: formatDate((_entries$find = entries.find(entry => entry.type === 'Clock In')) === null || _entries$find === void 0 ? void 0 : _entries$find.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"entry-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"entry-type\",\n              children: \"Clock Out:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"entry-time\",\n              children: formatDate((_entries$find2 = entries.find(entry => entry.type === 'Clock Out')) === null || _entries$find2 === void 0 ? void 0 : _entries$find2.time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-button\",\n            onClick: () => handleEdit(new Date(date)),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"edit\",\n              children: \"\\u270F\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)]\n        }, date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Edit Time Entries for \", editDate === null || editDate === void 0 ? void 0 : editDate.toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSave,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Clock In:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: editClockIn,\n              onChange: date => setEditClockIn(date),\n              showTimeSelect: true,\n              timeIntervals: 15,\n              timeCaption: \"Time\",\n              dateFormat: \"MMMM d, yyyy h:mm aa\",\n              name: \"clockIn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Clock Out:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: editClockOut,\n              onChange: date => setEditClockOut(date),\n              showTimeSelect: true,\n              timeIntervals: 15,\n              timeCaption: \"Time\",\n              dateFormat: \"MMMM d, yyyy h:mm aa\",\n              name: \"clockOut\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleCloseModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(ClockInOut, \"KjIGyZ7TiDf4evR2dQWJOp+RHeo=\");\n_c = ClockInOut;\nexport default ClockInOut;\nvar _c;\n$RefreshReg$(_c, \"ClockInOut\");","map":{"version":3,"names":["React","useState","DatePicker","jsxDEV","_jsxDEV","ClockInOut","_s","isClockedIn","setIsClockedIn","timeEntries","setTimeEntries","showModal","setShowModal","editDate","setEditDate","editClockIn","setEditClockIn","Date","editClockOut","setEditClockOut","handleClockIn","currentTime","type","time","editable","handleClockOut","handleEdit","day","dayEntries","filter","entry","toLocaleDateString","clockInEntry","find","clockOutEntry","handleSave","e","preventDefault","updatedEntries","map","handleCloseModal","formatDate","date","isNaN","getTime","Intl","DateTimeFormat","year","month","hour","minute","second","timeZoneName","format","groupEntriesByDay","grouped","forEach","dateKey","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","Object","entries","_entries$find","_entries$find2","role","onSubmit","selected","onChange","showTimeSelect","timeIntervals","timeCaption","dateFormat","name","_c","$RefreshReg$"],"sources":["/Users/ahmad/clock-in-out 2/client/src/ClockInOut.js"],"sourcesContent":["// src/ClockInOut.js\nimport React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n//import './ClockInOut.css'; // Optional: your custom CSS\n\nconst ClockInOut = () => {\n  // Local state for clock-in status and time entries\n  const [isClockedIn, setIsClockedIn] = useState(false);\n  const [timeEntries, setTimeEntries] = useState([]);\n  \n  // Modal state for editing entries\n  const [showModal, setShowModal] = useState(false);\n  // The day being edited (used only to group entries, not the times themselves)\n  const [editDate, setEditDate] = useState(null);\n  // Separate states for the editable clock in and clock out times\n  const [editClockIn, setEditClockIn] = useState(new Date());\n  const [editClockOut, setEditClockOut] = useState(new Date());\n\n  // Handler to clock in: record the current time as a clock in event.\n  const handleClockIn = () => {\n    if (!isClockedIn) {\n      const currentTime = new Date();\n      setTimeEntries([...timeEntries, { type: 'Clock In', time: currentTime, editable: false }]);\n      setIsClockedIn(true);\n    }\n  };\n\n  // Handler to clock out: record the current time as a clock out event.\n  const handleClockOut = () => {\n    if (isClockedIn) {\n      const currentTime = new Date();\n      setTimeEntries([...timeEntries, { type: 'Clock Out', time: currentTime, editable: false }]);\n      setIsClockedIn(false);\n    }\n  };\n\n  // Handler to open the edit modal for a given day.\n  const handleEdit = (day) => {\n    setEditDate(day);\n    // Extract existing entries for the selected day.\n    const dayEntries = timeEntries.filter(entry =>\n      new Date(entry.time).toLocaleDateString() === day.toLocaleDateString()\n    );\n    const clockInEntry = dayEntries.find(entry => entry.type === 'Clock In');\n    const clockOutEntry = dayEntries.find(entry => entry.type === 'Clock Out');\n\n    // If no entry exists, default to the selected day.\n    setEditClockIn(clockInEntry ? new Date(clockInEntry.time) : day);\n    setEditClockOut(clockOutEntry ? new Date(clockOutEntry.time) : day);\n    setShowModal(true);\n  };\n\n  // Handler to save edited clock in/out times for the selected day.\n  const handleSave = (e) => {\n    e.preventDefault();\n    const updatedEntries = timeEntries.map(entry => {\n      if (new Date(entry.time).toLocaleDateString() === editDate.toLocaleDateString()) {\n        if (entry.type === 'Clock In') {\n          return { ...entry, time: editClockIn };\n        }\n        if (entry.type === 'Clock Out') {\n          return { ...entry, time: editClockOut };\n        }\n      }\n      return entry;\n    });\n    setTimeEntries(updatedEntries);\n    setShowModal(false);\n  };\n\n  // Close the modal without saving\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  // Format a Date into a readable string.\n  const formatDate = (date) => {\n    if (!(date instanceof Date) || isNaN(date.getTime())) {\n      return 'Invalid date';\n    }\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      timeZoneName: 'short',\n    }).format(date);\n  };\n\n  // Group entries by day\n  const groupEntriesByDay = () => {\n    const grouped = {};\n    timeEntries.forEach(entry => {\n      const dateKey = new Date(entry.time).toLocaleDateString();\n      if (!grouped[dateKey]) {\n        grouped[dateKey] = [];\n      }\n      grouped[dateKey].push(entry);\n    });\n    return grouped;\n  };\n\n  return (\n    <div className=\"clock-in-out-container\">\n      <h1 className=\"status\">{isClockedIn ? 'Clocked In' : 'Clocked Out'}</h1>\n      <div className=\"button-container\">\n        <button className=\"clock-button\" onClick={handleClockIn} disabled={isClockedIn}>\n          Clock In\n        </button>\n        <button className=\"clock-button\" onClick={handleClockOut} disabled={!isClockedIn}>\n          Clock Out\n        </button>\n      </div>\n\n      <div className=\"entries-grid\">\n        {Object.entries(groupEntriesByDay()).map(([date, entries]) => (\n          <div className=\"day-entries\" key={date}>\n            <h3>{date}</h3>\n            <div className=\"entry-item\">\n              <div className=\"entry-type\">Clock In:</div>\n              <div className=\"entry-time\">\n                {formatDate(entries.find(entry => entry.type === 'Clock In')?.time)}\n              </div>\n            </div>\n            <div className=\"entry-item\">\n              <div className=\"entry-type\">Clock Out:</div>\n              <div className=\"entry-time\">\n                {formatDate(entries.find(entry => entry.type === 'Clock Out')?.time)}\n              </div>\n            </div>\n            <button className=\"edit-button\" onClick={() => handleEdit(new Date(date))}>\n              <span role=\"img\" aria-label=\"edit\">✏️</span>\n            </button>\n          </div>\n        ))}\n      </div>\n\n      {showModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h2>Edit Time Entries for {editDate?.toLocaleDateString()}</h2>\n            <form onSubmit={handleSave}>\n              <div>\n                <label>Clock In:</label>\n                <DatePicker\n                  selected={editClockIn}\n                  onChange={(date) => setEditClockIn(date)}\n                  showTimeSelect\n                  timeIntervals={15}\n                  timeCaption=\"Time\"\n                  dateFormat=\"MMMM d, yyyy h:mm aa\"\n                  name=\"clockIn\"\n                />\n              </div>\n              <div>\n                <label>Clock Out:</label>\n                <DatePicker\n                  selected={editClockOut}\n                  onChange={(date) => setEditClockOut(date)}\n                  showTimeSelect\n                  timeIntervals={15}\n                  timeCaption=\"Time\"\n                  dateFormat=\"MMMM d, yyyy h:mm aa\"\n                  name=\"clockOut\"\n                />\n              </div>\n              <div className=\"modal-buttons\">\n                <button type=\"submit\">Save Changes</button>\n                <button type=\"button\" onClick={handleCloseModal}>\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ClockInOut;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}