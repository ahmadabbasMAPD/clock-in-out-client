{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { LOGIN, LOGOUT, LOGIN_REQUEST, LOGIN_FAILURE } from './authActions';\nconst initialState = {\n  user: JSON.parse(localStorage.getItem('user')) || null,\n  token: localStorage.getItem('token') || null,\n  isLoading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  // Actions are handled externally\n  extraReducers: builder => {\n    builder.addCase(LOGIN_REQUEST, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(LOGIN, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload;\n      state.token = action.payload.token;\n      state.error = null;\n    }).addCase(LOGIN_FAILURE, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }).addCase(LOGOUT, state => {\n      state.user = null;\n      state.token = null;\n      state.isLoading = false;\n      state.error = null;\n    });\n  }\n});\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","LOGIN","LOGOUT","LOGIN_REQUEST","LOGIN_FAILURE","initialState","user","JSON","parse","localStorage","getItem","token","isLoading","error","authSlice","name","reducers","extraReducers","builder","addCase","state","action","payload","reducer"],"sources":["/Users/ahmad/clock-in-out/client/src/redux/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { LOGIN, LOGOUT, LOGIN_REQUEST, LOGIN_FAILURE } from './authActions';\n\nconst initialState = {\n    user: JSON.parse(localStorage.getItem('user')) || null,\n    token: localStorage.getItem('token') || null,\n    isLoading: false,\n    error: null,\n};\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {}, // Actions are handled externally\n    extraReducers: (builder) => {\n        builder\n            .addCase(LOGIN_REQUEST, (state) => {\n                state.isLoading = true;\n                state.error = null;\n            })\n            .addCase(LOGIN, (state, action) => {\n                state.isLoading = false;\n                state.user = action.payload;\n                state.token = action.payload.token;\n                state.error = null;\n            })\n            .addCase(LOGIN_FAILURE, (state, action) => {\n                state.isLoading = false;\n                state.error = action.payload;\n            })\n            .addCase(LOGOUT, (state) => {\n                state.user = null;\n                state.token = null;\n                state.isLoading = false;\n                state.error = null;\n            });\n    },\n});\n\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,EAAEC,MAAM,EAAEC,aAAa,EAAEC,aAAa,QAAQ,eAAe;AAE3E,MAAMC,YAAY,GAAG;EACjBC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;EACtDC,KAAK,EAAEF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;EAC5CE,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGd,WAAW,CAAC;EAC1Be,IAAI,EAAE,MAAM;EACZV,YAAY;EACZW,QAAQ,EAAE,CAAC,CAAC;EAAE;EACdC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAAChB,aAAa,EAAGiB,KAAK,IAAK;MAC/BA,KAAK,CAACR,SAAS,GAAG,IAAI;MACtBQ,KAAK,CAACP,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDM,OAAO,CAAClB,KAAK,EAAE,CAACmB,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACd,IAAI,GAAGe,MAAM,CAACC,OAAO;MAC3BF,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACX,KAAK;MAClCS,KAAK,CAACP,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC,CACDM,OAAO,CAACf,aAAa,EAAE,CAACgB,KAAK,EAAEC,MAAM,KAAK;MACvCD,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAChC,CAAC,CAAC,CACDH,OAAO,CAACjB,MAAM,EAAGkB,KAAK,IAAK;MACxBA,KAAK,CAACd,IAAI,GAAG,IAAI;MACjBc,KAAK,CAACT,KAAK,GAAG,IAAI;MAClBS,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACP,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeC,SAAS,CAACS,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}