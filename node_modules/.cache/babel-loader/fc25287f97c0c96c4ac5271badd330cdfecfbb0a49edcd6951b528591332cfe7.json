{"ast":null,"code":"var _jsxFileName = \"/Users/ahmad/clock-in-out-client/clock-in-out-client/src/AdminDashboard.js\",\n  _s = $RefreshSig$();\n// src/AdminDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport api from './api';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport './AdminDashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  // States for users, selection and errors\n  const [users, setUsers] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [error, setError] = useState('');\n\n  // States for \"Add User\" modal\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const [newUsername, setNewUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [newRole, setNewRole] = useState('user');\n  const [newPhone, setNewPhone] = useState('');\n  const [addUserError, setAddUserError] = useState('');\n  const [addUserSuccess, setAddUserSuccess] = useState('');\n\n  // NEW: States for editing time entries in admin view\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editDate, setEditDate] = useState(null);\n  const [editClockIn, setEditClockIn] = useState(new Date());\n  const [editClockOut, setEditClockOut] = useState(new Date());\n  const [editModalError, setEditModalError] = useState('');\n\n  // Fetch all users\n  const fetchAllUsers = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await api.get('/api/users', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUsers(response.data);\n      setError('');\n    } catch (err) {\n      console.error(err);\n      setError('Failed to fetch users.');\n    }\n  };\n  useEffect(() => {\n    fetchAllUsers();\n  }, []);\n  const selectedUser = users.find(u => u._id === selectedUserId);\n\n  // Filter clock entries for the selected user (and month if selected)\n  const filteredEntries = selectedUser && selectedUser.clockEntries ? selectedUser.clockEntries.filter(entry => {\n    if (!selectedMonth) return true;\n    const entryYearMonth = new Date(entry.timestamp).toISOString().slice(0, 7);\n    return entryYearMonth === selectedMonth;\n  }) : [];\n\n  // Helper to group entries by day\n  const groupEntriesByDay = entries => {\n    const grouped = {};\n    entries.forEach(entry => {\n      const dateKey = new Date(entry.timestamp).toLocaleDateString();\n      if (!grouped[dateKey]) {\n        grouped[dateKey] = [];\n      }\n      grouped[dateKey].push(entry);\n    });\n    return grouped;\n  };\n  const groupedEntries = groupEntriesByDay(filteredEntries);\n\n  // Helper to compute daily hours from clock in/out pairs\n  const computeDailyHours = dayEntries => {\n    if (!dayEntries || dayEntries.length === 0) return 0;\n    const clockIns = dayEntries.filter(e => e.type === 'clockIn');\n    const clockOuts = dayEntries.filter(e => e.type === 'clockOut');\n    if (clockIns.length === 0 || clockOuts.length === 0) return 0;\n    const earliestClockIn = new Date(Math.min(...clockIns.map(e => new Date(e.timestamp).getTime())));\n    const latestClockOut = new Date(Math.max(...clockOuts.map(e => new Date(e.timestamp).getTime())));\n    return (latestClockOut - earliestClockIn) / (1000 * 60 * 60);\n  };\n\n  // Compute overall weekly hours for each user\n  const computeUserWeeklyHours = user => {\n    if (!user.clockEntries) return 0;\n    const grouped = groupEntriesByDay(user.clockEntries);\n    let total = 0;\n    Object.keys(grouped).forEach(day => {\n      total += computeDailyHours(grouped[day]);\n    });\n    return total;\n  };\n  const overallData = users.map(user => ({\n    username: user.username,\n    weeklyHours: computeUserWeeklyHours(user)\n  }));\n\n  // Prepare detailed chart data for the selected user (if needed)\n  const detailedData = Object.keys(groupEntriesByDay(filteredEntries)).map(date => ({\n    date,\n    hours: computeDailyHours(groupEntriesByDay(filteredEntries)[date])\n  })).sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // Determine available months from selected user's entries\n  const availableMonths = selectedUser && selectedUser.clockEntries ? Array.from(new Set(selectedUser.clockEntries.map(entry => new Date(entry.timestamp).toISOString().slice(0, 7)))).sort() : [];\n\n  // NEW: Open the edit modal for a given date\n  const handleEdit = date => {\n    setEditDate(new Date(date));\n    setEditModalError('');\n    const dayEntries = groupedEntries[date] || [];\n    const clockInEntry = dayEntries.find(e => e.type === 'clockIn');\n    const clockOutEntry = dayEntries.find(e => e.type === 'clockOut');\n    const defaultClockIn = new Date(date);\n    defaultClockIn.setHours(9, 0, 0, 0);\n    const defaultClockOut = new Date(date);\n    defaultClockOut.setHours(17, 0, 0, 0);\n    setEditClockIn(clockInEntry ? new Date(clockInEntry.timestamp) : defaultClockIn);\n    setEditClockOut(clockOutEntry ? new Date(clockOutEntry.timestamp) : defaultClockOut);\n    setShowEditModal(true);\n  };\n\n  // NEW: Save updated time entries\n  const handleSave = async e => {\n    e.preventDefault();\n    if (!selectedUser || !editDate) return;\n    try {\n      const token = localStorage.getItem('token');\n      const payload = {\n        date: editDate.toISOString().split('T')[0],\n        clockIn: editClockIn ? editClockIn.toISOString() : undefined,\n        clockOut: editClockOut ? editClockOut.toISOString() : undefined\n      };\n      await api.put(`/api/users/${selectedUser._id}/time-entries`, payload, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      await fetchAllUsers();\n      setShowEditModal(false);\n      setEditModalError('');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error updating time entries:', err);\n      const errorMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || 'Failed to update time entries.';\n      setEditModalError(errorMsg);\n    }\n  };\n  const handleCloseEditModal = () => {\n    setShowEditModal(false);\n    setEditModalError('');\n  };\n  const formatDate = dateInput => {\n    const date = new Date(dateInput);\n    if (isNaN(date.getTime())) return 'Invalid date';\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      timeZoneName: 'short'\n    }).format(date);\n  };\n\n  // --- Render ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }, this), addUserSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: addUserSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-user-section\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAddUserModal(true),\n        className: \"add-user-button\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), showAddUserModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), addUserError && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: addUserError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: async e => {\n            e.preventDefault();\n            try {\n              const token = localStorage.getItem('token');\n              await api.post('/api/auth/register', {\n                username: newUsername,\n                password: newPassword,\n                role: newRole,\n                phone: newPhone || ''\n              }, {\n                headers: {\n                  Authorization: `Bearer ${token}`\n                }\n              });\n              await fetchAllUsers();\n              setShowAddUserModal(false);\n              setNewUsername('');\n              setNewPassword('');\n              setNewRole('user');\n              setNewPhone('');\n              setAddUserError('');\n              setAddUserSuccess('User added successfully!');\n              setTimeout(() => setAddUserSuccess(''), 3000);\n            } catch (err) {\n              var _err$response2, _err$response2$data;\n              console.error('Error adding user:', err);\n              const errorMsg = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Failed to add user.';\n              setAddUserError(errorMsg);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newUsername,\n              onChange: e => setNewUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Role:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: newRole,\n              onChange: e => setNewRole(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"user\",\n                children: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"admin\",\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Phone:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newPhone,\n              onChange: e => setNewPhone(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                setShowAddUserModal(false);\n                setAddUserError('');\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userSelect\",\n          children: \"Select User: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"userSelect\",\n          value: selectedUserId,\n          onChange: e => {\n            setSelectedUserId(e.target.value);\n            setSelectedMonth('');\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--Select User--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user._id,\n            children: user.username\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"monthSelect\",\n          children: \"Select Month: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"monthSelect\",\n          value: selectedMonth,\n          onChange: e => setSelectedMonth(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--All Months--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), availableMonths.map(month => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: month,\n            children: month\n          }, month, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [selectedUser.username, \"'s Detailed Time Entries\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), detailedData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: detailedData,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => Number(value).toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"hours\",\n            fill: \"#82ca9d\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No detailed time entries available for the selected month.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 13\n      }, this), Object.keys(groupedEntries).length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"admin-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Clock In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Clock Out\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(groupedEntries).sort((a, b) => new Date(a) - new Date(b)).map(date => {\n            const dayEntries = groupedEntries[date];\n            const dailyHours = computeDailyHours(dayEntries);\n            const clockInTime = dayEntries.find(e => e.type === 'clockIn') ? new Date(dayEntries.find(e => e.type === 'clockIn').timestamp).toLocaleTimeString() : 'N/A';\n            const clockOutTime = dayEntries.find(e => e.type === 'clockOut') ? new Date(dayEntries.find(e => e.type === 'clockOut').timestamp).toLocaleTimeString() : 'N/A';\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: clockInTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: clockOutTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: dailyHours.toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleEdit(date),\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    role: \"img\",\n                    \"aria-label\": \"edit\",\n                    children: \"\\u270F\\uFE0F\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 25\n              }, this)]\n            }, date, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No time entries available for the selected month.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please select a user from the dropdown.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Weekly Total Hours for All Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this), overallData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        data: overallData,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          formatter: value => Number(value).toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"weeklyHours\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No user data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 9\n    }, this), showEditModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000,\n        padding: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        style: {\n          backgroundColor: '#fff',\n          borderRadius: '8px',\n          padding: '20px',\n          width: '100%',\n          maxWidth: '400px',\n          maxHeight: '90vh',\n          overflowY: 'auto',\n          boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Edit Time Entries for \", editDate ? editDate.toLocaleDateString() : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), editModalError && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: editModalError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSave,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Clock In:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: editClockIn,\n              onChange: date => setEditClockIn(date),\n              showTimeSelect: true,\n              timeIntervals: 15,\n              timeCaption: \"Time\",\n              dateFormat: \"MMMM d, yyyy h:mm aa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Clock Out:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: editClockOut,\n              onChange: date => setEditClockOut(date),\n              showTimeSelect: true,\n              timeIntervals: 15,\n              timeCaption: \"Time\",\n              dateFormat: \"MMMM d, yyyy h:mm aa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: handleCloseEditModal,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"+W/N9ujAPNhbiGgK6yxZnOrnmOU=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","api","DatePicker","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","users","setUsers","selectedUserId","setSelectedUserId","selectedMonth","setSelectedMonth","error","setError","showAddUserModal","setShowAddUserModal","newUsername","setNewUsername","newPassword","setNewPassword","newRole","setNewRole","newPhone","setNewPhone","addUserError","setAddUserError","addUserSuccess","setAddUserSuccess","showEditModal","setShowEditModal","editDate","setEditDate","editClockIn","setEditClockIn","Date","editClockOut","setEditClockOut","editModalError","setEditModalError","fetchAllUsers","token","localStorage","getItem","response","get","headers","Authorization","data","err","console","selectedUser","find","u","_id","filteredEntries","clockEntries","filter","entry","entryYearMonth","timestamp","toISOString","slice","groupEntriesByDay","entries","grouped","forEach","dateKey","toLocaleDateString","push","groupedEntries","computeDailyHours","dayEntries","length","clockIns","e","type","clockOuts","earliestClockIn","Math","min","map","getTime","latestClockOut","max","computeUserWeeklyHours","user","total","Object","keys","day","overallData","username","weeklyHours","detailedData","date","hours","sort","a","b","availableMonths","Array","from","Set","handleEdit","clockInEntry","clockOutEntry","defaultClockIn","setHours","defaultClockOut","handleSave","preventDefault","payload","split","clockIn","undefined","clockOut","put","_err$response","_err$response$data","errorMsg","handleCloseEditModal","formatDate","dateInput","isNaN","Intl","DateTimeFormat","year","month","hour","minute","second","timeZoneName","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","onSubmit","post","password","role","phone","setTimeout","_err$response2","_err$response2$data","value","onChange","target","required","htmlFor","id","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","formatter","Number","toFixed","fill","dailyHours","clockInTime","toLocaleTimeString","clockOutTime","position","backgroundColor","display","alignItems","justifyContent","zIndex","padding","borderRadius","maxWidth","maxHeight","overflowY","boxShadow","selected","showTimeSelect","timeIntervals","timeCaption","dateFormat","_c","$RefreshReg$"],"sources":["/Users/ahmad/clock-in-out-client/clock-in-out-client/src/AdminDashboard.js"],"sourcesContent":["// src/AdminDashboard.js\nimport React, { useState, useEffect } from 'react';\nimport api from './api';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport './AdminDashboard.css';\n\nconst AdminDashboard = () => {\n  // States for users, selection and errors\n  const [users, setUsers] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [selectedMonth, setSelectedMonth] = useState('');\n  const [error, setError] = useState('');\n\n  // States for \"Add User\" modal\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const [newUsername, setNewUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [newRole, setNewRole] = useState('user');\n  const [newPhone, setNewPhone] = useState('');\n  const [addUserError, setAddUserError] = useState('');\n  const [addUserSuccess, setAddUserSuccess] = useState('');\n\n  // NEW: States for editing time entries in admin view\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [editDate, setEditDate] = useState(null);\n  const [editClockIn, setEditClockIn] = useState(new Date());\n  const [editClockOut, setEditClockOut] = useState(new Date());\n  const [editModalError, setEditModalError] = useState('');\n\n  // Fetch all users\n  const fetchAllUsers = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await api.get('/api/users', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setUsers(response.data);\n      setError('');\n    } catch (err) {\n      console.error(err);\n      setError('Failed to fetch users.');\n    }\n  };\n\n  useEffect(() => {\n    fetchAllUsers();\n  }, []);\n\n  const selectedUser = users.find((u) => u._id === selectedUserId);\n\n  // Filter clock entries for the selected user (and month if selected)\n  const filteredEntries =\n    selectedUser && selectedUser.clockEntries\n      ? selectedUser.clockEntries.filter((entry) => {\n          if (!selectedMonth) return true;\n          const entryYearMonth = new Date(entry.timestamp)\n            .toISOString()\n            .slice(0, 7);\n          return entryYearMonth === selectedMonth;\n        })\n      : [];\n\n  // Helper to group entries by day\n  const groupEntriesByDay = (entries) => {\n    const grouped = {};\n    entries.forEach((entry) => {\n      const dateKey = new Date(entry.timestamp).toLocaleDateString();\n      if (!grouped[dateKey]) {\n        grouped[dateKey] = [];\n      }\n      grouped[dateKey].push(entry);\n    });\n    return grouped;\n  };\n\n  const groupedEntries = groupEntriesByDay(filteredEntries);\n\n  // Helper to compute daily hours from clock in/out pairs\n  const computeDailyHours = (dayEntries) => {\n    if (!dayEntries || dayEntries.length === 0) return 0;\n    const clockIns = dayEntries.filter((e) => e.type === 'clockIn');\n    const clockOuts = dayEntries.filter((e) => e.type === 'clockOut');\n    if (clockIns.length === 0 || clockOuts.length === 0) return 0;\n    const earliestClockIn = new Date(\n      Math.min(...clockIns.map((e) => new Date(e.timestamp).getTime()))\n    );\n    const latestClockOut = new Date(\n      Math.max(...clockOuts.map((e) => new Date(e.timestamp).getTime()))\n    );\n    return (latestClockOut - earliestClockIn) / (1000 * 60 * 60);\n  };\n\n  // Compute overall weekly hours for each user\n  const computeUserWeeklyHours = (user) => {\n    if (!user.clockEntries) return 0;\n    const grouped = groupEntriesByDay(user.clockEntries);\n    let total = 0;\n    Object.keys(grouped).forEach((day) => {\n      total += computeDailyHours(grouped[day]);\n    });\n    return total;\n  };\n\n  const overallData = users.map((user) => ({\n    username: user.username,\n    weeklyHours: computeUserWeeklyHours(user),\n  }));\n\n  // Prepare detailed chart data for the selected user (if needed)\n  const detailedData = Object.keys(groupEntriesByDay(filteredEntries))\n    .map((date) => ({\n      date,\n      hours: computeDailyHours(groupEntriesByDay(filteredEntries)[date]),\n    }))\n    .sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // Determine available months from selected user's entries\n  const availableMonths =\n    selectedUser && selectedUser.clockEntries\n      ? Array.from(\n          new Set(\n            selectedUser.clockEntries.map((entry) =>\n              new Date(entry.timestamp).toISOString().slice(0, 7)\n            )\n          )\n        ).sort()\n      : [];\n\n  // NEW: Open the edit modal for a given date\n  const handleEdit = (date) => {\n    setEditDate(new Date(date));\n    setEditModalError('');\n    const dayEntries = groupedEntries[date] || [];\n    const clockInEntry = dayEntries.find((e) => e.type === 'clockIn');\n    const clockOutEntry = dayEntries.find((e) => e.type === 'clockOut');\n\n    const defaultClockIn = new Date(date);\n    defaultClockIn.setHours(9, 0, 0, 0);\n    const defaultClockOut = new Date(date);\n    defaultClockOut.setHours(17, 0, 0, 0);\n\n    setEditClockIn(clockInEntry ? new Date(clockInEntry.timestamp) : defaultClockIn);\n    setEditClockOut(clockOutEntry ? new Date(clockOutEntry.timestamp) : defaultClockOut);\n    setShowEditModal(true);\n  };\n\n  // NEW: Save updated time entries\n  const handleSave = async (e) => {\n    e.preventDefault();\n    if (!selectedUser || !editDate) return;\n    try {\n      const token = localStorage.getItem('token');\n      const payload = {\n        date: editDate.toISOString().split('T')[0],\n        clockIn: editClockIn ? editClockIn.toISOString() : undefined,\n        clockOut: editClockOut ? editClockOut.toISOString() : undefined,\n      };\n      await api.put(\n        `/api/users/${selectedUser._id}/time-entries`,\n        payload,\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      await fetchAllUsers();\n      setShowEditModal(false);\n      setEditModalError('');\n    } catch (err) {\n      console.error('Error updating time entries:', err);\n      const errorMsg = err.response?.data?.error || 'Failed to update time entries.';\n      setEditModalError(errorMsg);\n    }\n  };\n\n  const handleCloseEditModal = () => {\n    setShowEditModal(false);\n    setEditModalError('');\n  };\n\n  const formatDate = (dateInput) => {\n    const date = new Date(dateInput);\n    if (isNaN(date.getTime())) return 'Invalid date';\n    return new Intl.DateTimeFormat('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric',\n      timeZoneName: 'short',\n    }).format(date);\n  };\n\n  // --- Render ---\n  return (\n    <div className=\"admin-dashboard\">\n      <h1>Admin Dashboard</h1>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {addUserSuccess && <p style={{ color: 'green' }}>{addUserSuccess}</p>}\n\n      {/* Add User Section */}\n      <div className=\"add-user-section\">\n        <button\n          onClick={() => setShowAddUserModal(true)}\n          className=\"add-user-button\"\n        >\n          Add User\n        </button>\n      </div>\n\n      {showAddUserModal && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <h2>Add New User</h2>\n            {addUserError && <p style={{ color: 'red' }}>{addUserError}</p>}\n            <form onSubmit={async (e) => {\n              e.preventDefault();\n              try {\n                const token = localStorage.getItem('token');\n                await api.post(\n                  '/api/auth/register',\n                  {\n                    username: newUsername,\n                    password: newPassword,\n                    role: newRole,\n                    phone: newPhone || '',\n                  },\n                  { headers: { Authorization: `Bearer ${token}` } }\n                );\n                await fetchAllUsers();\n                setShowAddUserModal(false);\n                setNewUsername('');\n                setNewPassword('');\n                setNewRole('user');\n                setNewPhone('');\n                setAddUserError('');\n                setAddUserSuccess('User added successfully!');\n                setTimeout(() => setAddUserSuccess(''), 3000);\n              } catch (err) {\n                console.error('Error adding user:', err);\n                const errorMsg =\n                  err.response?.data?.error || 'Failed to add user.';\n                setAddUserError(errorMsg);\n              }\n            }}>\n              <div>\n                <label>Username:</label>\n                <input\n                  type=\"text\"\n                  value={newUsername}\n                  onChange={(e) => setNewUsername(e.target.value)}\n                  required\n                />\n              </div>\n              <div>\n                <label>Password:</label>\n                <input\n                  type=\"password\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  required\n                />\n              </div>\n              <div>\n                <label>Role:</label>\n                <select\n                  value={newRole}\n                  onChange={(e) => setNewRole(e.target.value)}\n                  required\n                >\n                  <option value=\"user\">User</option>\n                  <option value=\"admin\">Admin</option>\n                </select>\n              </div>\n              <div>\n                <label>Phone:</label>\n                <input\n                  type=\"text\"\n                  value={newPhone}\n                  onChange={(e) => setNewPhone(e.target.value)}\n                />\n              </div>\n              <div className=\"modal-buttons\">\n                <button type=\"submit\">Add User</button>\n                <button type=\"button\" onClick={() => { setShowAddUserModal(false); setAddUserError(''); }}>\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Filters */}\n      <div className=\"filters\">\n        <div className=\"filter-group\">\n          <label htmlFor=\"userSelect\">Select User: </label>\n          <select\n            id=\"userSelect\"\n            value={selectedUserId}\n            onChange={(e) => {\n              setSelectedUserId(e.target.value);\n              setSelectedMonth('');\n            }}\n          >\n            <option value=\"\">--Select User--</option>\n            {users.map((user) => (\n              <option key={user._id} value={user._id}>\n                {user.username}\n              </option>\n            ))}\n          </select>\n        </div>\n        {selectedUser && (\n          <div className=\"filter-group\">\n            <label htmlFor=\"monthSelect\">Select Month: </label>\n            <select\n              id=\"monthSelect\"\n              value={selectedMonth}\n              onChange={(e) => setSelectedMonth(e.target.value)}\n            >\n              <option value=\"\">--All Months--</option>\n              {availableMonths.map((month) => (\n                <option key={month} value={month}>\n                  {month}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n      </div>\n\n      {selectedUser ? (\n        <>\n          <h2>{selectedUser.username}'s Detailed Time Entries</h2>\n          {detailedData.length > 0 ? (\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <BarChart\n                data={detailedData}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip formatter={(value) => Number(value).toFixed(2)} />\n                <Legend />\n                <Bar dataKey=\"hours\" fill=\"#82ca9d\" />\n              </BarChart>\n            </ResponsiveContainer>\n          ) : (\n            <p>No detailed time entries available for the selected month.</p>\n          )}\n\n          {Object.keys(groupedEntries).length > 0 ? (\n            <table className=\"admin-table\">\n              <thead>\n                <tr>\n                  <th>Date</th>\n                  <th>Clock In</th>\n                  <th>Clock Out</th>\n                  <th>Hours</th>\n                  <th>Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.keys(groupedEntries)\n                  .sort((a, b) => new Date(a) - new Date(b))\n                  .map((date) => {\n                    const dayEntries = groupedEntries[date];\n                    const dailyHours = computeDailyHours(dayEntries);\n                    const clockInTime = dayEntries.find((e) => e.type === 'clockIn')\n                      ? new Date(\n                          dayEntries.find((e) => e.type === 'clockIn').timestamp\n                        ).toLocaleTimeString()\n                      : 'N/A';\n                    const clockOutTime = dayEntries.find((e) => e.type === 'clockOut')\n                      ? new Date(\n                          dayEntries.find((e) => e.type === 'clockOut').timestamp\n                        ).toLocaleTimeString()\n                      : 'N/A';\n                    return (\n                      <tr key={date}>\n                        <td>{date}</td>\n                        <td>{clockInTime}</td>\n                        <td>{clockOutTime}</td>\n                        <td>{dailyHours.toFixed(2)}</td>\n                        <td>\n                          <button onClick={() => handleEdit(date)}>\n                            <span role=\"img\" aria-label=\"edit\">✏️</span>\n                          </button>\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </table>\n          ) : (\n            <p>No time entries available for the selected month.</p>\n          )}\n        </>\n      ) : (\n        <p>Please select a user from the dropdown.</p>\n      )}\n\n      <h2>Weekly Total Hours for All Users</h2>\n      {overallData.length > 0 ? (\n        <ResponsiveContainer width=\"100%\" height={300}>\n          <BarChart\n            data={overallData}\n            margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"username\" />\n            <YAxis />\n            <Tooltip formatter={(value) => Number(value).toFixed(2)} />\n            <Legend />\n            <Bar dataKey=\"weeklyHours\" fill=\"#8884d8\" />\n          </BarChart>\n        </ResponsiveContainer>\n      ) : (\n        <p>No user data available.</p>\n      )}\n\n      {/* NEW: Edit Modal */}\n      {showEditModal && (\n        <div\n          className=\"modal-overlay\"\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: 'rgba(0, 0, 0, 0.6)',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            zIndex: 1000,\n            padding: '10px',\n          }}\n        >\n          <div\n            className=\"modal-content\"\n            style={{\n              backgroundColor: '#fff',\n              borderRadius: '8px',\n              padding: '20px',\n              width: '100%',\n              maxWidth: '400px',\n              maxHeight: '90vh',\n              overflowY: 'auto',\n              boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)',\n            }}\n          >\n            <h2>Edit Time Entries for {editDate ? editDate.toLocaleDateString() : ''}</h2>\n            {editModalError && <p style={{ color: 'red' }}>{editModalError}</p>}\n            <form onSubmit={handleSave}>\n              <div>\n                <label>Clock In:</label>\n                <DatePicker\n                  selected={editClockIn}\n                  onChange={(date) => setEditClockIn(date)}\n                  showTimeSelect\n                  timeIntervals={15}\n                  timeCaption=\"Time\"\n                  dateFormat=\"MMMM d, yyyy h:mm aa\"\n                />\n              </div>\n              <div>\n                <label>Clock Out:</label>\n                <DatePicker\n                  selected={editClockOut}\n                  onChange={(date) => setEditClockOut(date)}\n                  showTimeSelect\n                  timeIntervals={15}\n                  timeCaption=\"Time\"\n                  dateFormat=\"MMMM d, yyyy h:mm aa\"\n                />\n              </div>\n              <div className=\"modal-buttons\">\n                <button type=\"submit\">Save Changes</button>\n                <button type=\"button\" onClick={handleCloseEditModal}>\n                  Cancel\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}